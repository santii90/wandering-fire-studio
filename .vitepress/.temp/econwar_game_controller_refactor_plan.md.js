import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Plan de Refactorización de game_controller.gd","description":"","frontmatter":{},"headers":[],"relativePath":"econwar/game_controller_refactor_plan.md","filePath":"econwar/game_controller_refactor_plan.md"}');
const _sfc_main = { name: "econwar/game_controller_refactor_plan.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="plan-de-refactorizacion-de-game-controller-gd" tabindex="-1">Plan de Refactorización de <code>game_controller.gd</code> <a class="header-anchor" href="#plan-de-refactorizacion-de-game-controller-gd" aria-label="Permalink to &quot;Plan de Refactorización de \`game_controller.gd\`&quot;">​</a></h1><h2 id="objetivo" tabindex="-1">Objetivo <a class="header-anchor" href="#objetivo" aria-label="Permalink to &quot;Objetivo&quot;">​</a></h2><p>Refactorizar el archivo <code>scripts/game_controller.gd</code> para mejorar la modularidad, mantenibilidad y claridad del código, separando sus múltiples responsabilidades en módulos más pequeños y específicos.</p><h2 id="estructura-de-directorios-propuesta" tabindex="-1">Estructura de Directorios Propuesta <a class="header-anchor" href="#estructura-de-directorios-propuesta" aria-label="Permalink to &quot;Estructura de Directorios Propuesta&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scripts/</span></span>
<span class="line"><span>├── common/</span></span>
<span class="line"><span>│   ├── constants.gd</span></span>
<span class="line"><span>│   ├── terrain_data.gd       # Nuevo</span></span>
<span class="line"><span>│   ├── directions.gd         # Nuevo</span></span>
<span class="line"><span>│   ├── game_state.gd         # Nuevo (Singleton/Autoload)</span></span>
<span class="line"><span>│   └── utils.gd              # Nuevo</span></span>
<span class="line"><span>├── game_logic/               # Nuevo</span></span>
<span class="line"><span>│   ├── territory_manager.gd  # Nuevo</span></span>
<span class="line"><span>│   ├── population_manager.gd # Nuevo</span></span>
<span class="line"><span>│   ├── resource_manager.gd   # Nuevo</span></span>
<span class="line"><span>│   ├── expansion_manager.gd  # Nuevo</span></span>
<span class="line"><span>│   └── strategic_ai.gd       # Nuevo</span></span>
<span class="line"><span>├── systems/                  # Nuevo</span></span>
<span class="line"><span>│   ├── border_cache_system.gd # Nuevo</span></span>
<span class="line"><span>│   └── game_time_system.gd    # Nuevo</span></span>
<span class="line"><span>├── game_controller.gd        # Refactorizado (Orquestador)</span></span>
<span class="line"><span>└── ... (otros scripts existentes)</span></span></code></pre></div><h2 id="tareas-detalladas" tabindex="-1">Tareas Detalladas <a class="header-anchor" href="#tareas-detalladas" aria-label="Permalink to &quot;Tareas Detalladas&quot;">​</a></h2><h3 id="_1-crear-estructura-de-directorios-y-archivos-base" tabindex="-1">1. Crear Estructura de Directorios y Archivos Base <a class="header-anchor" href="#_1-crear-estructura-de-directorios-y-archivos-base" aria-label="Permalink to &quot;1. Crear Estructura de Directorios y Archivos Base&quot;">​</a></h3><ul><li>[ ] Crear directorio <code>scripts/common/</code></li><li>[ ] Crear directorio <code>scripts/game_logic/</code></li><li>[ ] Crear directorio <code>scripts/systems/</code></li><li>[ ] Crear archivo <code>scripts/common/terrain_data.gd</code></li><li>[ ] Crear archivo <code>scripts/common/directions.gd</code></li><li>[ ] Crear archivo <code>scripts/common/game_state.gd</code></li><li>[ ] Crear archivo <code>scripts/common/utils.gd</code></li><li>[ ] Crear archivo <code>scripts/game_logic/territory_manager.gd</code></li><li>[ ] Crear archivo <code>scripts/game_logic/population_manager.gd</code></li><li>[ ] Crear archivo <code>scripts/game_logic/resource_manager.gd</code></li><li>[ ] Crear archivo <code>scripts/game_logic/expansion_manager.gd</code></li><li>[ ] Crear archivo <code>scripts/game_logic/strategic_ai.gd</code></li><li>[ ] Crear archivo <code>scripts/systems/border_cache_system.gd</code></li><li>[ ] Crear archivo <code>scripts/systems/game_time_system.gd</code></li></ul><h3 id="_2-modulo-common-game-state-gd-singleton-autoload" tabindex="-1">2. Módulo <code>common/game_state.gd</code> (Singleton/Autoload) <a class="header-anchor" href="#_2-modulo-common-game-state-gd-singleton-autoload" aria-label="Permalink to &quot;2. Módulo \`common/game_state.gd\` (Singleton/Autoload)&quot;">​</a></h3><ul><li>[ ] Definir la clase <code>GameState</code>.</li><li>[ ] Mover las variables de estado principales (<code>terrain_map</code>, <code>ownership_map</code>, <code>resource_map</code>, <code>num_players</code>, <code>map_width</code>, <code>map_height</code>, <code>current_player</code>) de <code>game_controller.gd</code> a <code>GameState</code>.</li><li>[ ] Proveer métodos getter (y setter si son necesarios y seguros) para acceder a estas variables.</li><li>[ ] Configurar <code>GameState</code> como un Autoload en la configuración del proyecto Godot.</li></ul><h3 id="_3-modulo-common-terrain-data-gd" tabindex="-1">3. Módulo <code>common/terrain_data.gd</code> <a class="header-anchor" href="#_3-modulo-common-terrain-data-gd" aria-label="Permalink to &quot;3. Módulo \`common/terrain_data.gd\`&quot;">​</a></h3><ul><li>[ ] Mover las constantes <code>TERRAIN_DIFFICULTY</code>, <code>TERRAIN_DEFENSE_BONUS</code>, <code>TERRAIN_POPULATION_CAPACITY</code>, <code>TERRAIN_EXPANSION_COST</code> de <code>game_controller.gd</code> a <code>terrain_data.gd</code>.</li><li>[ ] Mover la constante <code>TERRAIN_TYPES</code> (alias de <code>TilesetManager.TerrainType</code>).</li><li>[ ] Mover la función <code>get_terrain_name</code>.</li><li>[ ] Mover las funciones auxiliares relacionadas con el terreno (<code>get_terrain_type</code>, <code>get_terrain_difficulty</code>, <code>get_terrain_defense_bonus</code>, <code>get_terrain_population_capacity</code>). Actualizar para usar <code>GameState</code> si es necesario.</li></ul><h3 id="_4-modulo-common-directions-gd" tabindex="-1">4. Módulo <code>common/directions.gd</code> <a class="header-anchor" href="#_4-modulo-common-directions-gd" aria-label="Permalink to &quot;4. Módulo \`common/directions.gd\`&quot;">​</a></h3><ul><li>[ ] Mover las constantes <code>DIRECTIONS</code>, <code>DIAGONALS</code>, <code>ALL_DIRECTIONS</code> de <code>game_controller.gd</code> a <code>directions.gd</code>.</li></ul><h3 id="_5-modulo-common-utils-gd" tabindex="-1">5. Módulo <code>common/utils.gd</code> <a class="header-anchor" href="#_5-modulo-common-utils-gd" aria-label="Permalink to &quot;5. Módulo \`common/utils.gd\`&quot;">​</a></h3><ul><li>[ ] Identificar y mover funciones auxiliares genéricas de <code>game_controller.gd</code> (ej. <code>is_within_map</code>, <code>get_region_key</code>, <code>get_affected_regions</code>).</li></ul><h3 id="_6-modulo-game-logic-territory-manager-gd" tabindex="-1">6. Módulo <code>game_logic/territory_manager.gd</code> <a class="header-anchor" href="#_6-modulo-game-logic-territory-manager-gd" aria-label="Permalink to &quot;6. Módulo \`game_logic/territory_manager.gd\`&quot;">​</a></h3><ul><li>[ ] Implementar la lógica para gestionar la propiedad de territorios (<code>ownership_map</code> ahora en <code>GameState</code>).</li><li>[ ] Mover la función <code>_set_territory_owner</code> y la señal <code>territory_changed</code>.</li><li>[ ] Mover la lógica de cálculo de <code>territory_counts</code> y las funciones <code>get_territory_count</code>, <code>update_territory_counts</code>, <code>calculate_player_territory_count</code>.</li><li>[ ] Mover la función <code>is_border_tile</code>.</li><li>[ ] Dependerá de <code>GameState</code> y <code>BorderCacheSystem</code>.</li></ul><h3 id="_7-modulo-game-logic-population-manager-gd" tabindex="-1">7. Módulo <code>game_logic/population_manager.gd</code> <a class="header-anchor" href="#_7-modulo-game-logic-population-manager-gd" aria-label="Permalink to &quot;7. Módulo \`game_logic/population_manager.gd\`&quot;">​</a></h3><ul><li>[ ] Mover toda la lógica relacionada con la gestión de población: <ul><li>Variables: <code>population_workers</code>, <code>population_troops</code>, <code>population_logistics</code>, <code>unassigned</code>, etc. (ahora probablemente dentro de <code>GameState</code> o <code>PlayerData</code>).</li><li>Funciones: <code>calculate_population_capacity</code>, <code>update_units</code>, <code>reduce_troops</code>, <code>sync_population_counters</code>, <code>get_worker_count</code>, <code>set_worker_count</code>, <code>get_troops_in_territory</code>, etc., <code>get_total_population</code>, <code>set_total_population</code>, <code>get_unassigned_population</code>, <code>set_unassigned_population</code>, <code>add_unassigned_population</code>, <code>validate_population_data</code>, <code>process_unassigned_population</code>, <code>register_population_loss</code>.</li></ul></li><li>[ ] Mover constantes relacionadas como <code>WORKERS_ASSIGNMENT_SPEED</code>, etc.</li><li>[ ] Dependerá de <code>GameState</code>.</li></ul><h3 id="_8-modulo-game-logic-resource-manager-gd" tabindex="-1">8. Módulo <code>game_logic/resource_manager.gd</code> <a class="header-anchor" href="#_8-modulo-game-logic-resource-manager-gd" aria-label="Permalink to &quot;8. Módulo \`game_logic/resource_manager.gd\`&quot;">​</a></h3><ul><li>[ ] Mover la lógica de gestión de recursos (oro, comida, producción). <ul><li>Variables (<code>resource_map</code> en <code>GameState</code>).</li><li>Funciones: <code>get_gold</code>, <code>set_gold</code>, <code>add_gold</code>, <code>get_food</code>, etc., <code>process_resources</code>.</li></ul></li><li>[ ] Dependerá de <code>GameState</code> y <code>PopulationManager</code>.</li></ul><h3 id="_9-modulo-game-logic-expansion-manager-gd" tabindex="-1">9. Módulo <code>game_logic/expansion_manager.gd</code> <a class="header-anchor" href="#_9-modulo-game-logic-expansion-manager-gd" aria-label="Permalink to &quot;9. Módulo \`game_logic/expansion_manager.gd\`&quot;">​</a></h3><ul><li>[ ] Mover la lógica de procesamiento de expansiones y ataques. <ul><li>Variables: <code>pending_expansions</code>, <code>expansion_info</code>, <code>expansion_percentage</code>.</li><li>Funciones: <code>expand_territory</code>, <code>process_pending_expansions</code>, <code>process_expansion_step</code>, <code>process_empty_expansions_batch</code>, <code>return_troops_to_player</code>, <code>calculate_deployed_troops</code>, <code>get_available_troops</code>.</li></ul></li><li>[ ] Mover la lógica de combate implícita en <code>process_expansion_step</code> (cálculo de bajas, etc.).</li><li>[ ] Dependerá de <code>GameState</code>, <code>TerritoryManager</code>, <code>PopulationManager</code>, <code>StrategicAI</code>, <code>BorderCacheSystem</code>.</li></ul><h3 id="_10-modulo-game-logic-strategic-ai-gd" tabindex="-1">10. Módulo <code>game_logic/strategic_ai.gd</code> <a class="header-anchor" href="#_10-modulo-game-logic-strategic-ai-gd" aria-label="Permalink to &quot;10. Módulo \`game_logic/strategic_ai.gd\`&quot;">​</a></h3><ul><li>[ ] Mover la lógica de evaluación estratégica para expansiones y ataques. <ul><li>Funciones: <code>find_adjacent_empty_prioritized</code>, <code>find_adjacent_player_prioritized</code>, <code>calculate_territory_value</code>, <code>calculate_expansion_potential</code>, <code>evaluate_strategic_importance</code>, <code>would_isolate_enemy_territory</code>, <code>get_player_strength</code>, <code>evaluate_borders_strategic_value</code>, <code>select_strategic_border</code>, <code>calculate_border_strategic_value</code>, <code>is_border_spearhead</code>, <code>would_create_circular_territory_fast</code>, <code>could_divide_enemy_territory_simple</code>.</li></ul></li><li>[ ] Dependerá de <code>GameState</code>, <code>TerritoryManager</code>.</li></ul><h3 id="_11-modulo-systems-border-cache-system-gd" tabindex="-1">11. Módulo <code>systems/border_cache_system.gd</code> <a class="header-anchor" href="#_11-modulo-systems-border-cache-system-gd" aria-label="Permalink to &quot;11. Módulo \`systems/border_cache_system.gd\`&quot;">​</a></h3><ul><li>[ ] Mover toda la lógica de caché de fronteras. <ul><li>Variables: <code>border_tiles_cache</code>, <code>border_cache_valid</code>, <code>border_with_player_cache</code>, <code>border_with_player_cache_valid</code>, <code>region_size</code>, <code>border_region_cache</code>, <code>border_region_validity</code>, <code>region_border_flags</code>.</li><li>Funciones: <code>invalidate_borders_at</code>, <code>invalidate_all_border_caches</code>, <code>get_border_tiles_with_empty</code>, <code>get_border_tiles_with_player</code>, <code>initialize_border_region_cache</code>, <code>are_all_borders_cached</code>.</li></ul></li><li>[ ] Dependerá de <code>GameState</code>.</li></ul><h3 id="_12-modulo-systems-game-time-system-gd" tabindex="-1">12. Módulo <code>systems/game_time_system.gd</code> <a class="header-anchor" href="#_12-modulo-systems-game-time-system-gd" aria-label="Permalink to &quot;12. Módulo \`systems/game_time_system.gd\`&quot;">​</a></h3><ul><li>[ ] Mover la variable <code>game_time</code>.</li><li>[ ] Mover la función <code>update_game_time</code>.</li><li>[ ] Considerar si debe manejar el <code>GameTickManager</code> si existe o si esa lógica se integra aquí.</li></ul><h3 id="_13-refactorizar-scripts-game-controller-gd" tabindex="-1">13. Refactorizar <code>scripts/game_controller.gd</code> <a class="header-anchor" href="#_13-refactorizar-scripts-game-controller-gd" aria-label="Permalink to &quot;13. Refactorizar \`scripts/game_controller.gd\`&quot;">​</a></h3><ul><li>[ ] Eliminar todas las variables y funciones movidas a otros módulos.</li><li>[ ] Convertir <code>_init</code> y <code>new_game</code> (o <code>initialize_game</code>) para que inicialicen y configuren los nuevos managers y sistemas, obteniendo referencias a ellos o usando el <code>GameState</code> Singleton.</li><li>[ ] Mantener la lógica de orquestación mínima necesaria (ej., llamar a <code>process_resources</code>, <code>process_pending_expansions</code>, <code>update_game_time</code> en <code>_process</code> o según corresponda).</li><li>[ ] Actualizar las llamadas internas para usar los nuevos módulos (ej., <code>PopulationManager.reduce_troops(...)</code> en lugar de <code>reduce_troops(...)</code>).</li><li>[ ] Mantener las señales principales (<code>game_over</code>) si son apropiadas aquí, o moverlas al manager correspondiente.</li><li>[ ] Mover o eliminar las funciones getter específicas de UI (<code>get_active_movement_info_for_player</code>) - podrían ir a un módulo <code>ui/ui_getters.gd</code> o ser manejadas directamente por la UI consultando los managers.</li></ul><h3 id="_14-actualizar-referencias-externas" tabindex="-1">14. Actualizar Referencias Externas <a class="header-anchor" href="#_14-actualizar-referencias-externas" aria-label="Permalink to &quot;14. Actualizar Referencias Externas&quot;">​</a></h3><ul><li>[ ] Revisar <code>scripts/main.gd</code> y actualizar cómo interactúa con <code>game_controller</code> o los nuevos módulos/GameState.</li><li>[ ] Revisar cualquier otro script (UI, etc.) que dependa de <code>game_controller</code> y actualizar las llamadas.</li></ul><h3 id="_15-limpieza-y-pruebas" tabindex="-1">15. Limpieza y Pruebas <a class="header-anchor" href="#_15-limpieza-y-pruebas" aria-label="Permalink to &quot;15. Limpieza y Pruebas&quot;">​</a></h3><ul><li>[ ] Eliminar código comentado o no utilizado.</li><li>[ ] Ejecutar el juego y probar exhaustivamente las funcionalidades afectadas (expansión, combate, gestión de población, UI) para asegurar que todo funcione como antes.</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("econwar/game_controller_refactor_plan.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const game_controller_refactor_plan = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  game_controller_refactor_plan as default
};
