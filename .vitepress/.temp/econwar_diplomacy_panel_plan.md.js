import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Plan de Implementación: Panel de Diplomacia","description":"","frontmatter":{},"headers":[],"relativePath":"econwar/diplomacy_panel_plan.md","filePath":"econwar/diplomacy_panel_plan.md"}');
const _sfc_main = { name: "econwar/diplomacy_panel_plan.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="plan-de-implementacion-panel-de-diplomacia" tabindex="-1">Plan de Implementación: Panel de Diplomacia <a class="header-anchor" href="#plan-de-implementacion-panel-de-diplomacia" aria-label="Permalink to &quot;Plan de Implementación: Panel de Diplomacia&quot;">​</a></h1><p><strong>Objetivo:</strong> Implementar el panel de Diplomacia en la UI inferior para mostrar el estado de las relaciones entre el jugador actual y las demás facciones (IA o jugadores).</p><p><strong>Pasos Principales:</strong></p><ol><li><p><strong>Definir Estados Diplomáticos:</strong></p><ul><li>En <code>scripts/game_controller.gd</code>, definir un <code>enum</code> para los posibles estados diplomáticos. Ejemplo:<div class="language-gdscript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gdscript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">enum</span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}"> DiplomaticStatus</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> { </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">WAR</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">PEACE</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">ALLIANCE</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">, </span><span style="${ssrRenderStyle({ "--shiki-light": "#005CC5", "--shiki-dark": "#79B8FF" })}">TRUCE</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> } </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Añadir más si es necesario</span></span></code></pre></div></li></ul></li><li><p><strong>Almacenar Estado Diplomático:</strong></p><ul><li>En <code>scripts/game_controller.gd</code>, añadir una estructura de datos para almacenar el estado entre cada par de jugadores. Una matriz 2D o un diccionario anidado podría funcionar:<div class="language-gdscript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gdscript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Opción 1: Matriz 2D (siempre num_players x num_players)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">var</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> diplomacy_matrix: </span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">Array</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> [] </span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># Opción 2: Diccionario anidado</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}">var</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> diplomacy_status: </span><span style="${ssrRenderStyle({ "--shiki-light": "#6F42C1", "--shiki-dark": "#B392F0" })}">Dictionary</span><span style="${ssrRenderStyle({ "--shiki-light": "#D73A49", "--shiki-dark": "#F97583" })}"> =</span><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}"> {} </span><span style="${ssrRenderStyle({ "--shiki-light": "#6A737D", "--shiki-dark": "#6A737D" })}"># { player_id: { other_player_id: status } }</span></span></code></pre></div></li><li>Inicializar esta estructura en <code>_init</code> o <code>new_game</code>. Por defecto, todos podrían empezar en <code>PEACE</code> o <code>WAR</code> con todos, excepto consigo mismos.</li></ul></li><li><p><strong>Funciones en <code>game_controller.gd</code>:</strong></p><ul><li><code>get_diplomatic_status(player_a: int, player_b: int) -&gt; int</code>: Devuelve el estado diplomático (<code>DiplomaticStatus</code>) entre dos jugadores.</li><li><code>set_diplomatic_status(player_a: int, player_b: int, new_status: int)</code>: Establece el estado diplomático (asegurándose de que sea simétrico, ej., si A está en guerra con B, B también lo está con A).</li><li><em>(Futuro)</em> Funciones para acciones diplomáticas (<code>declare_war</code>, <code>offer_peace</code>, <code>propose_alliance</code>, etc.) que modifiquen el estado y generen eventos.</li></ul></li><li><p><strong>Modificar UI (<code>scenes/Main.tscn</code>):</strong></p><ul><li>Dentro del nodo <code>DiplomacyPanel</code> (<code>UI/ExpandablePanelsContainer/DiplomacyPanel</code>): <ul><li>Añadir un <code>ItemList</code> (ej: <code>DiplomacyList</code>) para mostrar a los otros jugadores.</li><li><em>(Opcional)</em> Añadir botones para futuras acciones diplomáticas.</li></ul></li></ul></li><li><p><strong>Modificar Script Principal (<code>scripts/main.gd</code>):</strong></p><ul><li>Añadir referencia <code>@onready var diplomacy_list = $UI/ExpandablePanelsContainer/DiplomacyPanel/DiplomacyList</code>.</li><li>Actualizar <code>load_ui_references</code> y <code>verify_ui_nodes</code> para incluir <code>diplomacy_list</code>.</li><li>Implementar <code>_update_diplomacy_panel()</code>: <ul><li>Obtener el <code>current_player</code>.</li><li>Limpiar <code>diplomacy_list</code>.</li><li>Iterar por todos los demás jugadores (<code>for p in range(num_players): if p != current_player:</code>).</li><li>Llamar a <code>game_controller.get_diplomatic_status(current_player, p)</code> para obtener el estado.</li><li>Añadir un item al <code>diplomacy_list</code> mostrando el nombre/ID del jugador <code>p</code> y su estado diplomático relativo al <code>current_player</code> (ej: &quot;Jugador 2: GUERRA&quot;).</li><li><em>(Opcional)</em> Cambiar el color del item según el estado (rojo para guerra, verde para alianza, etc.).</li></ul></li></ul></li></ol><p><strong>Consideraciones Adicionales:</strong></p><ul><li>¿Cómo se inicializa la diplomacia al empezar una nueva partida?</li><li>¿Existen modificadores de juego basados en el estado diplomático (ej: bonus/penalizaciones comerciales, paso de tropas)?</li><li>¿Cómo interactúa la IA con el sistema de diplomacia?</li><li>Generar eventos (<code>EventLogger</code>) para cambios diplomáticos importantes.</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("econwar/diplomacy_panel_plan.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const diplomacy_panel_plan = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  diplomacy_panel_plan as default
};
