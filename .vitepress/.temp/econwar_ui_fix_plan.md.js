import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Plan de Corrección para Problemas de UI Post-Refactorización","description":"","frontmatter":{},"headers":[],"relativePath":"econwar/ui_fix_plan.md","filePath":"econwar/ui_fix_plan.md"}');
const _sfc_main = { name: "econwar/ui_fix_plan.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="plan-de-correccion-para-problemas-de-ui-post-refactorizacion" tabindex="-1">Plan de Corrección para Problemas de UI Post-Refactorización <a class="header-anchor" href="#plan-de-correccion-para-problemas-de-ui-post-refactorizacion" aria-label="Permalink to &quot;Plan de Corrección para Problemas de UI Post-Refactorización&quot;">​</a></h1><h2 id="_1-diagnostico" tabindex="-1">1. Diagnóstico <a class="header-anchor" href="#_1-diagnostico" aria-label="Permalink to &quot;1. Diagnóstico&quot;">​</a></h2><p>Tras analizar los scripts <code>MainUIManager.gd</code>, <code>InputHandler.gd</code>, <code>BottomPanelManager.gd</code>, <code>PopulationPanel.gd</code> y la estructura de la escena <code>Main.tscn</code> (basada en la imagen proporcionada), se identificaron las siguientes causas probables para los problemas de la UI (paneles no abren, datos no actualizan):</p><ul><li><strong>Rutas de Nodos Internos Incorrectas (Sospecha Principal):</strong> Aunque las rutas a los nodos principales parecen correctas, es muy probable que las rutas <code>@onready</code> a los nodos <em>dentro</em> de <code>TopPanel</code>, <code>BottomTabBar</code> y <code>ExpandablePanelsContainer</code> sean incorrectas en <code>MainUIManager.gd</code> y <code>BottomPanelManager.gd</code>. Esto impediría encontrar los botones, etiquetas y paneles, bloqueando su funcionalidad.</li><li><strong>Conexiones de Señales Faltantes o Incorrectas:</strong> Es necesario verificar que todas las señales (desde <code>InputHandler</code>, Autoloads, botones de pestañas) estén correctamente conectadas a sus respectivos manejadores en los scripts de UI correspondientes.</li><li><strong>Falta de Método <code>update_panel_data()</code>:</strong> Algunos paneles individuales podrían no tener implementado el método necesario para actualizar su contenido cuando se muestran.</li></ul><h2 id="_2-plan-de-correccion-propuesto" tabindex="-1">2. Plan de Corrección Propuesto <a class="header-anchor" href="#_2-plan-de-correccion-propuesto" aria-label="Permalink to &quot;2. Plan de Corrección Propuesto&quot;">​</a></h2><p>El objetivo es restaurar la funcionalidad de la UI asegurando que los nodos se encuentren correctamente y que las señales estén bien conectadas.</p><div class="language-mermaid vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">graph TD</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    subgraph Archivos a Modificar</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        A[scripts/ui/MainUIManager.gd]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        B[scripts/ui/bottom_panel/BottomPanelManager.gd]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        C[scripts/ui/bottom_panel/*.gd (Paneles individuales)]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        D[scripts/ui/legend/LegendPanel.gd]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        E[scripts/ui/right_sidebar/AttackInfoPanel.gd]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        F[scripts/ui/event_viewer/EventViewer.gd]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        G[scripts/ui/debug/DebugPanel.gd]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    end</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    subgraph Tareas Principales</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        T1(Verificar/Corregir Rutas Internas) --&gt; A &amp; B</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        T2(Verificar/Corregir Conexiones Señales InputHandler) --&gt; A</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        T3(Verificar/Corregir Conexiones Señales Autoloads) --&gt; A &amp; C &amp; D &amp; E &amp; F &amp; G</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        T4(Verificar/Corregir Conexiones Botones Pestaña) --&gt; B</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">        T5(Asegurar método &#39;update_panel_data&#39; en Paneles) --&gt; C &amp; D &amp; E &amp; F &amp; G</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    end</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T1 -- Corrige referencias a botones/labels en TopPanel --&gt; A</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T1 -- Corrige referencias a botones en BottomTabBar --&gt; A &amp; B</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T1 -- Corrige referencias a paneles en ExpandablePanelsContainer --&gt; B</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T2 -- Conecta toggle_legend_pressed, etc. --&gt; A</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T3 -- Conecta current_player_changed, resources_changed, etc. --&gt; A</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T3 -- Conecta señales específicas (population_distribution_changed, etc.) --&gt; C &amp; D &amp; E &amp; F &amp; G</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T4 -- Conecta pressed de PopulationTabButton, etc. --&gt; B</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T5 -- Implementa/Verifica update_panel_data --&gt; C &amp; D &amp; E &amp; F &amp; G</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    %% Resultado Esperado</span></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    Resultado(UI Funcional: Paneles abren, datos se actualizan)</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "--shiki-light": "#24292E", "--shiki-dark": "#E1E4E8" })}">    T1 &amp; T2 &amp; T3 &amp; T4 &amp; T5 --&gt; Resultado</span></span></code></pre></div><h2 id="_3-pasos-detallados" tabindex="-1">3. Pasos Detallados <a class="header-anchor" href="#_3-pasos-detallados" aria-label="Permalink to &quot;3. Pasos Detallados&quot;">​</a></h2><ol><li><strong>Corregir Rutas de Nodos Internos:</strong><ul><li><strong>En <code>MainUIManager.gd</code>:</strong> Revisar y corregir las rutas <code>@onready</code> para <code>player_info_label</code>, <code>resources_label</code>, <code>legend_button</code>, <code>events_button</code>, <code>debug_button</code>, <code>attack_info_tab_button</code>. <strong>(Requiere inspección de los hijos de <code>TopPanel</code> y <code>BottomTabBar</code> en la escena)</strong>.</li><li><strong>En <code>BottomPanelManager.gd</code>:</strong> Revisar y corregir las rutas <code>@onready</code> para todos los <code>...TabButton</code> (dentro de <code>BottomTabBar</code>) y todos los <code>...Panel</code> (dentro de <code>ExpandablePanelsContainer</code>). <strong>(Requiere inspección de los hijos de <code>BottomTabBar</code> y <code>ExpandablePanelsContainer</code> en la escena)</strong>.</li></ul></li><li><strong>Verificar/Corregir Conexiones de Señales:</strong><ul><li><strong>En <code>MainUIManager.gd</code> (<code>_ready</code> y <code>_setup_main_buttons</code>):</strong><ul><li>Asegurar que las señales de <code>InputHandler</code> (<code>toggle_player_layer_pressed</code>, <code>cycle_view_mode_pressed</code>, <code>next_player_pressed</code>, <code>toggle_legend_pressed</code>, <code>toggle_event_viewer_pressed</code>, <code>validate_population_pressed</code>, <code>toggle_debug_panel_pressed</code>) estén conectadas a los métodos correspondientes (<code>_on_...</code>, <code>toggle_legend_panel</code>, <code>show_events_viewer</code>, <code>toggle_debug_panel</code>).</li><li>Asegurar que las señales de Autoloads (<code>PopulationManager.troop_counts_changed</code>, <code>ResourceManager.resources_changed</code>, <code>GameState.current_player_changed</code>) estén conectadas a <code>_update_ui_elements</code> y <code>_on_current_player_changed</code>.</li><li>Asegurar que los botones principales (<code>legend_button</code>, <code>events_button</code>, <code>debug_button</code>, <code>attack_info_tab_button</code>) conecten su señal <code>pressed</code> a los métodos correctos (<code>toggle_legend_panel</code>, <code>show_events_viewer</code>, <code>toggle_debug_panel</code>, <code>toggle_right_sidebar</code>).</li></ul></li><li><strong>En <code>BottomPanelManager.gd</code> (<code>_connect_tab_buttons</code>):</strong> Asegurar que la señal <code>pressed</code> de cada <code>...TabButton</code> esté conectada a <code>_on_tab_button_pressed.bind(panel_correspondiente)</code>.</li><li><strong>En Scripts de Paneles Individuales (<code>_ready</code>):</strong> Asegurar que cada panel se conecte a las señales de los Autoloads que necesita para actualizar sus datos (ej: <code>PopulationPanel</code> a <code>PopulationManager.population_distribution_changed</code>).</li></ul></li><li><strong>Asegurar <code>update_panel_data()</code>:</strong><ul><li>Verificar que todos los scripts de paneles que necesitan mostrar datos dinámicos (<code>MilitaryPanel.gd</code>, <code>InfrastructurePanel.gd</code>, <code>ResourcesPanel.gd</code>, <code>DiplomacyPanel.gd</code>, <code>EventPanel.gd</code>, <code>LegendPanel.gd</code>, <code>AttackInfoPanel.gd</code>) tengan implementado un método <code>update_panel_data()</code> (o similar) que obtenga y muestre la información más reciente de los Autoloads correspondientes.</li></ul></li></ol></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("econwar/ui_fix_plan.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const ui_fix_plan = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  ui_fix_plan as default
};
